/* dark-mode
 * Come to the Dark Mode, we have wookies
 */

@import '../../_sass/pm-styles/pm-buttons-mixins';

// forms/buttons
.button:not(.button-blue):not(.pv-button-green):not(.button--primary):not(.button--primaryborderEvenInDarkMode):not(.button--link):not(.button--error):not(.button--warning):not(.button--redborder):not(.button--primaryborder):not(.button--primaryborder-dark),
.button--info {
	@include button-dark;
}

// didnâ€™t used extend, not possible in @media for design system website
$primary-border-blue-selectors: '.button-blueborder';
@if ($pm-primary == $pm-blue) {
	$primary-border-blue-selectors: $primary-border-blue-selectors +
		', .button--primaryborder';
}
#{$primary-border-blue-selectors} {
	@include button-blueborder-dark;
}

$primary-border-green-selectors: '.pv-button-greenborder';
@if ($pm-primary == $pv-green) {
	$primary-border-green-selectors: $primary-border-green-selectors +
		', .button--primaryborder';
}
#{$primary-border-green-selectors} {
	@include pv-button-greenborder-dark;
}

.button--redborder,
.button.button--redborder {
	background-color: transparent;
	&:focus,
	&:hover,
	&:not(div):active,
	&:active {
		color: $pm-global-warning;
	}
}

.button--link,
a,
.link,
.button.button--link {
	&:focus,
	&:hover,
	&:not(div):active,
	&:active {
		color: currentColor;
	}
	&[disabled],
	&.is-disabled {
		color: #{rgba($white, 0.5)};
	}
}

.grouped-button {
	&[disabled],
	&.is-disabled {
		&.button {
			border-color: var(--bordercolor-input, $pm-global-border);
		}
		&.button-blueborder {
			border-color: $pm-primary-light;
		}
		&.pv-button-greenborder {
			border-color: $pv-green-light;
		}
	}
}

.field {
	&[type='search'] {
		background-image: url('#{$path-images}sprite-for-css-only.svg#css-search-white');
	}
}
@if $rtl-option == true {
	[dir='rtl'] {
		[type='search'].field {
			background-image: url('#{$path-images}sprite-for-css-only.svg#css-search-rtl-white');
		}
	}
}

.field[disabled] {
	color: #{rgba($white, 0.5)};
	opacity: 0.6;
}

select.field {
	background-image: url('#{$path-images}sprite-for-css-only.svg#css-caret-white');
}
.checkbox {
	&:indeterminate + .checkbox-fakecheck {
		background-image: url('#{$path-images}sprite-for-css-only.svg#css-dash-white');
	}
}

.searchbox-field[type='search'] {
	background-image: none;
}

.checkbox:focus + .checkbox-fakecheck,
.radio:focus + .radio-fakeradio {
	box-shadow: 0 0 10px 0 $input-shadow-color-darkmode;
}

// loading
[aria-busy='true'] {
	background-image: url(#{$path-images}loading-atom-smaller-dark.svg);
}

button[aria-busy='true'] {
	background-image: url(#{$path-images}loading-atom-smaller-disabled-dark.svg);
}

tr[aria-busy='true'] td,
td[aria-busy='true'] {
	&::before {
		background-image: url(#{$path-images}loading-atom-smaller-dark.svg);
	}
}

.progressive[aria-busy='true'] {
	&::before {
		animation-name: anime-background-loading-dark;
	}
}

@keyframes anime-background-loading-dark {
	0% {
		background-color: $pm-secondary-grey;
	}
	100% {
		background-color: lighten($pm-secondary-grey, 10%);
	}
}

// others
details {
	&[open] > summary {
		background-image: url(#{$path-images}sprite-for-css-only.svg#css-caret-close-white);
	}
}
summary {
	background-image: url(#{$path-images}sprite-for-css-only.svg#css-caret-white);
}

.appConfigBody-darkmode, // for Angular
  .isDarkMode {
	.display-on-darkmode {
		display: flex;
	}
	.hide-on-darkmode {
		display: none;
	}
}

// quick and dirty
.fill-global-grey:not(.fill-pm-blue):not(.fill-primary),
.fill-black:not(.fill-pm-blue):not(.fill-primary) {
	fill: $white;
} // dirty, I know

.fill-currentColor {
	fill: currentColor;
} // to avoid some issues

.qr-code {
	border: 1px solid $white;
}

.pill-icon-attachment {
	background-color: rgb(0 0 0 / 0.45);
}

// global
:root {
	--bgcolor-item-column-list: #{$pm-global-grey};
	--bgcolor-unread-item-column-list: #{$pm-global-altgrey};
	--bgcolor-view-column-detail: #{$pm-secondary-grey};
	--bgcolor-main-area: #{$pm-secondary-grey};
	--bgcolor-context-bar: #{$pm-secondary-grey};
	--bgcolor-subheader: #{$bluish-grey};
	--bgcolor-toolbar: #{$pm-global-altgrey};
	--color-main-area: #{$white};
	--bgcolor-disabled-checkboxes-radios: #{$pm-global-altgrey};
	--bgcolor-item-column-active: #{$pm-blue-dark};
	--bordercolor-input: #{$pm-tertiary-grey};
	--bgcolor-muted: #{$pm-tertiary-grey};
	--bgcolor-input: #{$pm-global-altgrey};
	--bgcolor-highlight: #{$pm-global-altgrey};
	--color-input: #{$white};
	--dropdown-box-shadow: rgb(0 0 0 / 0.75);
	--bgcolor-meter-bar: rgb(0 0 0 / 0.375);

	/*
	* TO BE REMOVED!
	*/
	--primary-lighten-40: #a2b1ee;
	--primary-lighten-20: #8498e9;
	--primary: #657ee4;
	--primary-darken-20: #5064b6;
	--primary-darken-40: #3c4b88;

	--text-norm: white;

	--interaction-norm: var(--primary);
	--interaction-norm-hover: var(--primary-darken-20);
	--interaction-norm-active: var(--primary-darken-40);
	--interaction-norm-contrast: white;

	--interaction-weak: #3c414e;
	--interaction-weak-hover: #494e5b;
	--interaction-weak-active: #5c6270;
	--interaction-weak-contrast: var(--text-norm);
	/*
	* / TO BE REMOVED!
	*/
}
