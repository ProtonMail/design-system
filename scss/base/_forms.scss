.placeholder,
::placeholder {
	color: var(--color-input, #{rgba($pm-global-grey, 0.65)});
	font-style: normal;
	opacity: 0.6;
}

$field-container: 26rem !default;

.field-container {
	width: $field-container;
	@extend .max-w100;
	@extend .inline-block;
	@extend .relative;

	&.auto {
		@extend .auto;
	}
}

.field {
	filter: none; // fixes Firefox autofill color
	border: 1px solid var(--bordercolor-input, $input-defaut-border);
	padding: em(6) em(16); // design want 34px height (actually 35 to avoid .5px)
	background-color: var(--bgcolor-input, $pm-input-background);
	border-radius: $global-border-radius;
	color: var(--color-input, $pm-global-grey);
	outline: 0;
	height: $default-height-fields;

	&.field--tiny,
	&.field--small,
	&.field--large {
		height: auto;
	}

	&:focus,
	&.focus,
	&:focus-within {
		background-color: var(--bgcolor-main-area, $white);
		box-shadow: 0 0 10px 0 $input-shadow-color;
	}

	&[aria-invalid='true']:not(:focus),
	&[aria-invalid='true']:not(.ng-pristine) {
		border-color: $pm-global-warning;
		box-shadow: none;
	}

	&.is-valid:not(:focus) {
		border-color: $pm-global-success;
	}

	&[disabled] {
		color: #{rgba($pm-global-grey, 0.3)};
	}

	&.w100 {
		width: 100%;
	}

	&.wauto {
		width: auto;
	}

	&:-moz-ui-invalid {
		// fixes some Firefox issues with HTML5 validation
		box-shadow: none;
	}

	&[type='search'] {
		background: url('#{$path-images}sprite-for-css-only.svg#css-search') 6px
			50% no-repeat;
		background-size: 1.5rem;
		padding-left: 2em;

		&::-webkit-search-cancel-button {
			display: none;
		}
	}

	&[type='number'] {
		padding-right: 0.25em;
	}

	&.select {
		@extend .field;
		padding-right: 0.6rem;
		.mauto {
			display: flex;
			width: 100%;
		}
		.mr0-5 {
			flex: 1 1 0px;
			@extend .text-ellipsis;
		}
	}
}

@if $rtl-option==true {
	[dir='rtl'] {
		[type='search'].field {
			padding-left: 0;
			padding-right: 2em;
			background: url('#{$path-images}sprite-for-css-only.svg#css-search-rtl')
				calc(100% - 6px)
				50%
				no-repeat;
		}
	}
}

select.field {
	background: var(--bgcolor-input, $pm-input-background)
		url('#{$path-images}sprite-for-css-only.svg#css-caret') calc(100% - 6px)
		50% no-repeat;
	background-size: 1.5rem;
	padding-left: 1em;
	padding-right: 20px;
	text-overflow: ellipsis;
	overflow: hidden;
	cursor: pointer;

	&::-ms-expand {
		display: none;
	}

	& > optgroup {
		background-color: var(--bgcolor-highlight, $pm-global-light);
	}
}

textarea.field {
	height: auto;
}

/* firefox bug */
textarea[required].field.field-pristine:invalid {
	box-shadow: none;
}

@if $rtl-option==true {
	[dir='rtl'] {
		select.field {
			background-position: 6px 50%;
			padding-right: 1em;
			padding-left: 20px;
		}
	}
}

/* errors */
.error-zone {
	transition: transform 0.15s linear, max-height 0.15s linear;
	transform: scaleY(1);
	transform-origin: top center;

	&:empty {
		transform: scaleY(0);
	}
}

// general rule: if focus is on the field => don't display error yet
.field-icon-container:focus-within + .error-zone,
.field:focus + .error-zone {
	transform: scaleY(0);
	max-height: 0;
}

/* sizes/other modifiers */
.field--tiny {
	padding: em(6); // useful for address group
}

.field--small {
	padding: em(2) em(16); // design want 26px height (actually 27 to avoid .5px)
}

.field--large {
	padding: em(10) em(16); // design want 42px height (actually 43 to avoid .5px)
}

.field--highlight {
	border-color: $pm-primary;
	border-width: 2px;
	background-color: #{rgba($pm-primary, 0.1)};
}

/* checkboxes */
.checkbox-fakecheck {
	display: inline-flex;
	border: 1px solid var(--bordercolor-input, $pm-global-border);
	border-radius: 2px;
	min-width: 1.6rem;
	width: 1.6rem;
	height: 1.6rem;
	margin: auto 0.5rem auto 0;
}

.item-icon-compact .checkbox-fakecheck {
	margin: auto;
	background: var(--bgcolor-input, $white);
}

.checkbox-fakecheck-img {
	margin: auto;
	// width: 1rem;
	transform: scale(0);
	transition: 0.15s transform linear;
}

.checkbox {
	@extend .sr-only;

	&:checked + .checkbox-fakecheck {
		.checkbox-fakecheck-img {
			transform: scale(1);
		}
	}

	&:focus + .checkbox-fakecheck {
		box-shadow: 0 0 10px 0 $input-shadow-color;
	}

	&[disabled] + .checkbox-fakecheck,
	&:indeterminate + .checkbox-fakecheck {
		background: var(--bgcolor-disabled-checkboxes-radios, $pm-global-muted);
	}

	&:indeterminate + .checkbox-fakecheck {
		content: '';
		width: 1.6rem;
		height: 1.6rem;
		background-image: url('#{$path-images}sprite-for-css-only.svg#css-dash');
		background-repeat: no-repeat;
	}
}

// exception for toolbar
.select-all {
	.checkbox-fakecheck {
		border: 1px solid #585c67;
		background-color: var(--bgcolor-aside-link, #484e59);
	}

	.checkbox-fakecheck-img {
		fill: var(--fillcolor-icons, $white);
	}
}

/* radios */
.radio-fakeradio {
	@extend .checkbox-fakecheck;
	border-radius: 50%;
}

.radio--ontop .radio-fakeradio {
	margin-top: 0.25em;
}

.radio-fakeradio::before {
	content: '';
	margin: auto;
	width: 0.8rem;
	height: 0.8rem;
	border-radius: 50%;
	background: transparent;
	transform: scale(0);
	transition: 0.15s transform linear;
}

.radio {
	@extend .sr-only;

	&:checked + .radio-fakeradio::before {
		background: $pm-primary;
		transform: scale(1);
	}

	&:focus + .radio-fakeradio {
		box-shadow: 0 0 10px 0 $input-shadow-color;
	}

	&[disabled] + .radio-fakeradio {
		background: var(--bgcolor-disabled-checkboxes-radios, $pm-global-muted);
	}
}

/* New toggle */
$toggle-width: em(40) !default;
$toggle-width-button: em(24) !default;
$toggle-bg-container: var(
	--toggle-bg-container,
	#e7e9ee
) !default; // dark mode 3c414e
$toggle-bg-loading: #989da9 !default;
$toggle-bg-default: var(
	--toggle-bg-default,
	#b5bac4
) !default; // dark mode 5c6270
$toggle-bg-disabled: var(
	--toggle-bg-disabled,
	#d7d9e0
) !default; // dark mode 494e5b
$toggle-active-bg: $pm-blue !default;
$toggle-active-focus-bg: #5064b6 !default;

.toggle-label {
	margin-top: 0.5em;
	min-height: $toggle-width-button;
	width: $toggle-width;
	display: inline-flex;
	background: $toggle-bg-container;
	border-radius: #{$toggle-width/2};
	position: relative;

	&::before {
		content: '';
		z-index: 2;
		position: absolute;
		width: #{$toggle-width-button};
		transition: transform 0.25s ease, background-color 0.25s ease;
		border-radius: $toggle-width-button;
		background: $toggle-bg-default;
		top: 0;
		left: 0;
		bottom: 0;
		transform: translateX(0);
	}

	& > .toggle-label-text {
		border-radius: $toggle-width-button;
		width: $toggle-width-button;
		position: absolute;
		z-index: 2;
		left: 0;
		top: 0;
		bottom: 0;
		display: inline-flex;

		&:first-child {
			z-index: 3;
		}
		&:last-child {
			z-index: 1;
		}

		& .toggle-label-img {
			transition: 0s; // transition for disappear
			fill: transparent;
			margin: auto;
		}

		+ .toggle-label-text {
			right: 0;
			left: auto;
		}
	}

	// will be done later
	// &--with-icons {

	// }
}

// checked state
.toggle-checkbox {
	@extend .sr-only;

	&:checked + .toggle-label {
		& > .toggle-label-text {
			&:first-child {
				z-index: 1;
			}
			&:last-child {
				z-index: 3;
				.toggle-label-img {
					fill: $white;
					transition: fill 0.1s steps(1, end) 0.1s; // transition for appear
				}
			}
		}

		&::before {
			transform: translateX(#{$toggle-width - $toggle-width-button});
			background-color: $pm-primary-dark;
		}
	}

	&[disabled] + .toggle-label {
		&::before {
			background-color: $toggle-bg-disabled;
		}
	}

	&[aria-busy='true'][disabled] {
		// because aria-busy and disabled

		+ .toggle-label {
			opacity: 1;

			&::before {
				background-color: $toggle-bg-loading;
				background-image: url(#{$path-images}infinite-loader.svg);
				background-position: 50% 50%;
				background-repeat: no-repeat;
				background-size: em(14);
			}

			& > .toggle-label-text {
				opacity: 0;
			}
		}

		&:checked {
			+ .toggle-label {
				&::before {
					background-color: $toggle-active-bg;
				}
			}
		}
	}

	&:focus,
	&:hover {
		+ .toggle-label {
			&::before {
				background-color: $toggle-bg-loading;
			}
		}
	}
	&:checked:focus,
	&:checked:hover {
		+ .toggle-label {
			&::before {
				background-color: $toggle-active-focus-bg;
			}
		}
	}
}
/*
 * TO REMOVE WITH COLOR REWORK !!!!
 */
.isDarkMode {
	.toggle-label {
		--toggle-bg-container: #3c414e;
		--toggle-bg-default: #5c6270;
		--toggle-bg-disabled: #494e5b;
	}
}

.toggle-label--small {
	margin-top: 0.25em;
	font-size: 0.8em;

	& .toggle-label-img {
		width: 1.3rem;
		height: 1.3rem;
	}
}

/* label */
// $pm-label-width defined in global vars
.label {
	padding-top: 0.5em;
	width: var(--label-width, $pm-label-width);
	padding-right: 0.5em;
	max-width: 100%;
	flex-shrink: 0;

	&.pt0 {
		padding-top: 0;
	}

	&.auto {
		width: auto;
	}

	&--small {
		font-size: 1.2rem;
		line-height: 2;
	}
}

// case for forms labelled only with icons (calendar popover, etc.)
$pm-label-icon-width: 2.4em !default;

.form--icon-labels .label {
	width: $pm-label-icon-width;
}

/* container address */
.field-container--address {
	margin-top: -1.6em;
}

/* field with icon */
.field-icon-container {
	@extend .field; // added focus-within inside on field for this fake-field :)
	padding: 0;

	> .field {
		border: 0;
		width: calc(100% - 1.5em);
	}
	&,
	&-empty {
		// for drive, to keep the same height
		min-height: calc(#{$default-height-fields} + 2px);
	}

	&:focus-within {
		> .field {
			background-color: transparent;
			box-shadow: none;
			outline: 0;
		}
	}
}

.field-icon-container--invalid:not(:focus-within) {
	border-color: $pm-global-warning;

	> .field {
		border-color: $pm-global-warning;
	}
}

/* @protonmail.com field */
.field--username,
.sign-layout-container .field--username.field--username {
	padding-right: var(--padding-right-field-above, 9em);
}

/* special stupid case for signup iframe challenge... not using same styles for the moment */
.sign-layout-container {
	.field--username {
		padding: em(10) em(16); // design want 42px height (actually 41 to avoid .5px)
	}
}

/**
 * New input form
 */
$inputform-border-color: #b5bac4 !default;
$inputform-border-color-hover: #989da9 !default;
$inputform-assistive-color: #6b7180 !default;
$inputform-suffix-color: #6b7180 !default;
$inputform-bg-color: $white !default;
$inputform-border-color-focus: $pm-primary !default;
$inputform-default-spacing-text: 0.4rem !default;
$inputform-error-color: #d13f44 !default;

.inputform {
	&-container {
		@extend .field-container;
	}

	&-label {
		padding-bottom: $inputform-default-spacing-text;
	}
	&-label-hint,
	&-assist {
		font-size: 1.2rem;
		color: $inputform-assistive-color;
	}
	&-label-hint {
		padding-bottom: 0.1rem; // just to compensate the difference of text size
	}
	&-assist {
		min-height: 1.9em;
		padding-top: $inputform-default-spacing-text;
	}
	&-label-text {
		font-weight: 600;
	}

	&-suffix {
		color: $inputform-suffix-color;
	}

	&-field {
		filter: none; // fixes Firefox autofill color
		border: 1px solid var(--bordercolor-input, $inputform-border-color);
		padding: em(6) em(12); // design want 34px height (actually 35 to avoid .5px)
		background-color: var(--bgcolor-input, $inputform-bg-color);
		border-radius: $global-border-radius;
		color: var(--color-input, $pm-global-grey);
		outline: 0;
		height: $default-height-fields-inputforms;

		&.error {
			border-color: $pm-global-warning;
		}

		&:hover,
		&.hover {
			border-color: $inputform-border-color-hover;
		}

		&:focus,
		&.focus,
		&:focus-within {
			border-color: $inputform-border-color-focus;
		}

		&:-moz-ui-invalid {
			// fixes some Firefox issues with HTML5 validation
			box-shadow: none;
		}
		&[type='search'] {
			background: url('#{$path-images}sprite-for-css-only.svg#css-search')
				6px 50% no-repeat;
			background-size: 1.6rem;
			padding-left: 2em;

			&::-webkit-search-cancel-button {
				display: none;
			}
		}

		@at-root {
			select#{&} {
				background: var(--bgcolor-input, $inputform-bg-color)
					url('#{$path-images}sprite-for-css-only.svg#css-caret')
					calc(100% - 6px) 50% no-repeat;
				background-size: 1.5rem;
				padding-right: 20px;
				text-overflow: ellipsis;
				overflow: hidden;
				cursor: pointer;

				&::-ms-expand {
					display: none;
				}

				& > optgroup {
					background-color: var(
						--bgcolor-highlight,
						$pm-global-light
					);
				}
			}
		}
	}

	// global error state on container
	&-container--invalid {
		.inputform {
			&-label-text,
			&-assist {
				color: $inputform-error-color;
				font-weight: 600;
			}
			&-field {
				border-color: $inputform-error-color;
			}
		}
	}

	// field icon container
	&-icon-container {
		@extend .inputform-field; // added focus-within inside on inputform-field for this fake-field :)
		padding: 0;

		.inputform-field {
			height: 100%;

			&,
			&:focus {
				border: 0;
				width: calc(100% - 1.5em);
				outline: 0;
			}
		}

		&-empty {
			// for drive, to keep the same height
			min-height: calc(#{$default-height-fields-inputforms} + 2px);
		}

		&:focus-within {
			.inputform-field {
				background-color: transparent;
				box-shadow: none;
				outline: 0;
				border: 0;
			}
		}
	}

	// bigger inputs
	&-container--bigger {
		.right-icon,
		.inputform-field,
		.inputform-icon-container {
			height: $bigger-height-fields-inputforms;
		}
		.inputform-field {
			&[type='search'] {
				background-size: 2rem;
				padding-left: 2.2em;
			}
		}
		.inputform-icon-container {
			&-empty {
				// for drive, to keep the same height
				min-height: calc(#{$bigger-height-fields-inputforms} + 2px);
			}
			.inputform-field {
				height: 100%;
			}
		}
	}

	// disabled input
	&-container--disabled {
		&,
		& .inputform-field,
		& .inputform-label-hint,
		& .inputform-assist {
			color: $inputform-border-color;
			cursor: auto;
		}
		& .inputform-label {
			cursor: auto;
		}
		& .inputform-field {
			&:hover,
			&.hover {
				border-color: $inputform-border-color;
			}
		}
	}
}
