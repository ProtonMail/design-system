/* input design */
::placeholder {
  color: rgba($pm-global-grey, .3);
  font-style: italic;
}

/* removes X in input when typing in IE/EDGE */
input::-ms-clear {
  width: 0;
  height: 0;
}
/* removes native password revealer for IE/EDGE */
input::-ms-reveal {
  display: none;
}

.pm-field-container {
  width: 26rem;
  @extend .mw100;
  @extend .inbl;
}

.pm-field {
  border: $input-defaut-border;
  padding: em(6) em(16); // design want 34px height (actually 35 to avoid .5px)
  background-color: $pm-input-background;
  width: $input-defaut-size;
  border-radius: $global-border-radius;
  &:focus,
  &.focus {
    background-color: $white;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16);
  }
  &[aria-invalid="true"]:not(:focus) {
    border-color: $pm-global-warning;
  }
  &.is-valid:not(:focus) {
    border-color: $pm-global-success;
  }
  &[disabled] {
    color: rgba( $pm-global-grey, .3 );
    font-style: italic;
  }
  &.w100 {
    width: 100%;
  }

  &[type="search"] {
    background: url("#{$path-images}sprite-for-css-only.svg#css-search") 6px 50% no-repeat;
    background-size: 1.5rem;
    @extend .pl2;
    &::-webkit-search-cancel-button {
      display: none;
    }
  }
}
@if $rtl-option == true {
  [dir="rtl"] {
    [type="search"].pm-field {
      padding-left: 0;
      @extend .pr2;
      background: url("#{$path-images}sprite-for-css-only.svg#css-search-rtl") calc(100% - 6px) 50% no-repeat;
    }
  }
}

select.pm-field {
  background: $pm-input-background url("#{$path-images}sprite-for-css-only.svg#css-caret") calc(100% - 6px) 50% no-repeat;
  background-size: 1.5rem;
  padding-left: 1em;
  padding-right: 20px;
  text-overflow: ellipsis;
  &::-ms-expand {
    display: none;
  }
}

@if $rtl-option == true {
  [dir="rtl"] {
    select.pm-field {
      background-position: 6px 50%;
      padding-right: 1em;
      padding-left: 20px;
    }
  }
}

/* errors */
.error-zone {
  transition: transform .15s linear;
  transform: scaleY(1);
  transform-origin: top center;
  &:empty {
    transform: scaleY(0);
  }
}


/* sizes */
.pm-field--tiny {
  padding: em(6); // useful for address group
}
.pm-field--small {
  padding: em(2) em(16);  // design want 26px height (actually 27 to avoid .5px)
}
.pm-field--large {
  padding: em(10) em(16); // design want 42px height (actually 43 to avoid .5px)
}

/* checkboxes */
.pm-checkbox-fakecheck {
  display: inline-flex;
  border: 1px solid $pm-global-border;
  border-radius: 2px;
  width: 1.6rem;
  height: 1.6rem;
  margin-right: .25rem;
}
.pm-checkbox-fakecheck-img {
  margin: auto;
  width: 1rem;
  transform: scale(0);
  transition: .15s transform linear;
}
.pm-checkbox {
  @extend .sr-only;
  &:checked + .pm-checkbox-fakecheck {
    .pm-checkbox-fakecheck-img {
      transform: scale(1);
    }
  }
  &:focus + .pm-checkbox-fakecheck {
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16);
  }
  &[disabled] + .pm-checkbox-fakecheck,
  &:indeterminate + .pm-checkbox-fakecheck {
    background: $pm-global-muted;
  }
  &:indeterminate + .pm-checkbox-fakecheck {
      content: '';
      width: 1.6rem;
      height: 1.6rem;
      background-image: url("#{$path-images}sprite-for-css-only.svg#css-dash");
      background-repeat: no-repeat;
  }
}


/* radios */
.pm-radio-fakeradio {
  @extend .pm-checkbox-fakecheck;
  border-radius: 50%;
}
.pm-radio-fakeradio::before {
  content: '';
  margin: auto;
  width: .8rem;
  height: .8rem;
  border-radius: 50%;
  background: transparent;
  transform: scale(0);
  transition: .15s transform linear;
}
.pm-radio {
  @extend .sr-only;
  &:checked + .pm-radio-fakeradio::before {
    background: $pm-blue;
    transform: scale(1);
  }
  &:focus + .pm-radio-fakeradio {
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16);
  }
  &[disabled] + .pm-radio-fakeradio {
    background: $pm-global-muted;
  }
}


/* toogle */
$width: 5.5em;
.pm-toggle-label {
  margin-top: .5em;
  // height: 2em;
  width: $width;
  display: inline-flex;
  border: 1px solid $pm-global-border;
  background: #fcfdff;
  border-radius: 2rem;
  padding: 2px;
  position: relative;
  &::before {
    content: '';
    position: absolute;
    width: calc( #{$width/2} - 2px);
    transition: transform .25s ease, background-color .25s ease, border-color .25s linear; 
    border-radius: 2rem;
    background: $pm-global-muted;
    top: 2px;
    left: 0;
    bottom: 2px;
    transform: translateX(2px);
    border: 1px solid $pm-global-border;
  }
  & > .pm-toggle-label-text {
    align-self: center;
    margin: 0;
    text-align: center;
    border-radius: 2rem;
    padding: em(6) 0;
    width: #{$width/2};
    position: relative;
    z-index: 2;
    transition: fill .1s steps(1, end); 
    display: inline-flex;
  }
}
@if $rtl-option == true {
  [dir="rtl"] {
    .pm-toggle-label {
      &::before {
        left: auto;
        right: 0;
        transform: translateX(-2px);
      }
    }
  }
}

.pm-toggle-checkbox {
  @extend .invisible;
  &:checked + .pm-toggle-label {
    & > .pm-toggle-label-text:last-child {
      fill: $white;
    }
    &::before {
      background: $pm-blue;
      transform: translateX( #{$width/2} ) translateX(-2px);
      // transform: translateX( calc( 2.5rem - 2px) ); does NOT work in IE11
      border-color: $pm-blue-dark;
    }
  }
  &:focus + .pm-toggle-label {
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.16);
  }
  &[aria-busy="true"] + .pm-toggle-label  {
    &::before {
      transform: translateX( #{$width/4} ) translateX(-2px);
      background: $pm-global-muted url(#{$path-images}loading.gif) 50% 50% no-repeat;
    }
  }
  &[disabled] + .pm-toggle-label  {
    background: rgba($pm-global-muted, .6);
    .pm-toggle-label-text {
      opacity: .3;
    }
  }
}
@if $rtl-option == true {
  [dir="rtl"] {
    .pm-toggle-checkbox {
      &:checked + .pm-toggle-label {
        &::before {
          transform: translateX( -#{$width/2} ) translateX(2px);
        }
      }
      &[aria-busy="true"] + .pm-toggle-label  {
        &::before {
          //background-color: $pm-blue;
          transform: translateX( -#{$width/4} ) translateX(2px);
        }
      }
    }
  }
}
.pm-toggle-label-img {
  margin: auto;
  width: 1.6rem;
  height: 1.6rem;
}



/* label */
.pm-label {
  padding-top: .5em;
  min-width: 15em;
}



/* Password revealer */
.password-revealer {
  position: absolute;
  right: .75em;
  top: .2em;
}
@if $rtl-option == true {
  [dir="rtl"] {
    .password-revealer {
      right: auto;
      left: .75em;
    }
  }
}