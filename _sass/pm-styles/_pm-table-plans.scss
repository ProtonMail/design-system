/*
 * Plans tables
 */
 .pm-plans-table {
  @extend .noborder;
  @extend .w100; 
  border-collapse: separate;
  border-spacing: 0;
}

.pm-simple-table-row-th {
  font-weight: normal;
}

.pm-plans-table {
  caption {
    transform: scale(0);
  }
  td,
  th {
    padding: em(16);
    border: 1px solid $pm-global-border;
    border-bottom: 0;
    border-right: 0;
  }
  th:empty {
    border: 0;
  }
  th:not(.pm-simple-table-row-th) {
    @extend .uppercase;
  }
  tr :last-child {
    border-right: 1px solid $pm-global-border;
  }
  thead {
    tr:first-of-type {
      & :nth-child(2) {
        border-top-left-radius: $global-border-radius;
      }
      & :last-child {
        border-top-right-radius: $global-border-radius;
      }
    }
  }
  tbody {
    tr:last-of-type {
      td,
      th {
        border-bottom: 1px solid $pm-global-border;
      }
      & :first-child {
        border-bottom-left-radius: $global-border-radius;
      }
      & :last-child {
        border-bottom-right-radius: $global-border-radius;
      }
    }
  }
  tbody tr {
    .pm-simple-table-row {
      padding-left: 2em;
    }
    &:first-of-type .pm-simple-table-row {
      border-top-left-radius: $global-border-radius;
    }
  }


}



/* modifiers for highlighting a plan */
/* ADR : 
   - getting type or unit from attr is not supported by any browser => https://developer.mozilla.org/en-US/docs/Web/CSS/attr
   - CSS custom properties can't be used in selectors => https://css-irl.info/practical-tips-css-variables/
   - content attribute can't be herited https://stackoverflow.com/questions/7175113/content-attribute-to-inherit-node-value
 */

$border-width: 2px !default;
$nb-plans-max: 4 !default;

@for $i from 1 through $nb-plans-max {

  .pm-table--highlight[data-plan-number="#{$i}"] {
    & tr td:nth-child(#{$i+1}),
    & tr th:nth-child(#{$i+1}) {
      border-left: #{$border-width} solid $pm-global-success;
      border-right: #{$border-width} solid $pm-global-success;
    }
    & tr:last-child td:nth-child(#{$i+1}) {
      border-bottom: #{$border-width} solid $pm-global-success;
    }
    & tr th:nth-child(#{$i+1}) {
      border-top: #{$border-width} solid $pm-global-success;
      position: relative;
      &:before {
        content: attr(data-highlight);
        display: block;
        position: absolute;
        bottom: 100%;
        left: -#{$border-width};
        right: -#{$border-width};
        background-color: $pm-global-success;
        color: $white;
        text-align: center;
        font-weight: bold;
        text-transform: none;
        font-size: 1.2rem;
        padding: .25em;
        border-radius: $global-border-radius $global-border-radius 0 0;
      }
    }
  }

}